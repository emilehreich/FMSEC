theory OTR2
begin

section{* 2.2 OTR - Authentication Failure *}

/*
    Protocol
        A → B : '1', Sign_skA ('initiator', g^x, A), pkA
        B → A : '2', Sign_skB ('responder', g^y, B), pkB
        
*/

builtins: 
    signing, diffie-hellman


// Public Key Infrastructure

rule Register_Keys:
    [Fr(~ltk)
    ]
  --[RLTK($A, ~ltk)
    ]->
    [!Ltk($A, ~ltk), !Pk($A, pk(~ltk)), Out(pk(~ltk))]

rule Reveal_ltk:
    [ !Ltk(A, ltk)
    ]
  --[ Reveal(A)
    ]->
    [ Out(ltk)
    ]

// -- Protocol Rules -- 
// Thread Initialization

rule Init_A:
    [ Fr(~id)
    , !Ltk(A, ltkA)
    , !Pk(B, pkB)
    ]
  --[ Create(A, ~id)
    , Unique(A)
    ]->
    [ St_A_1(A, ~id, ltkA, B, pkB)
    ]

rule Init_B:
    [ Fr(~id)
    , !Ltk(B, ltkB)
    , !Pk(A, pkA)
    ]
  --[ Create(B, ~id)
    , Unique(B)
    ]->
    [ St_B_1(B, ~id, ltkB, A, pkA)
    ]

rule A_1_Send:
    [ St_A_1(A, id, ltkA, B, pkB)
    , Fr(~x)
    ]
  --[ Send(A, B, <'1', 'g'^~x, sign(<'initiator','g'^~x, A>, ltkA), pk(ltkA)>)
    , Running(A, B, <'R', 'I', 'g'^~x>)
    ]->
    [ St_A_2(A, id, ltkA, B, pkB, ~x)
    , Out(<'1', 'g'^~x, sign(<'initiator','g'^~x, A>, ltkA), pk(ltkA)>)
    ]

rule B_1_Receive:
    [ St_B_1(B, id, ltkB, A, pkA)
    , In(<'1', gx, s, pkA>)
    ]
  --[ Receive(B, A, <'1', gx, s, pkA>)
    , Eq(verify(s, <'initiator', gx, A>, pkA), true)
    , Commit(B, A, <'R', 'I', gx>)
    ]->
    [ St_B_2(B, id, ltkB, A, pkA, gx)
    ]

rule B_2_Send:
    [ St_B_2(B, id, ltkB, A, pkA, gx)
    , Fr(~y)
    ]
  --[ Send(B, A, <'2', 'g'^~y, sign(<'responder', 'g'^~y, B>, ltkB), pk(ltkB)>)
    , Running(B, A, <'I', 'R', gx^~y>)
    , Authenticated(B, A, gx^~y)
    ]->
    [ St_B_3(B, id, ltkB, A, pkA, ~y)
    , Out(<'2', 'g'^~y, sign(<'responder','g'^~y, B>, ltkB), pk(ltkB)>)
    ]

rule A_2_Receive:
    [ St_A_2(A, id, ltkA, B, pkB, x)
    , In(<'2', gy, s, pkB>)
    ]
  --[ Receive(A, B, <'2', gy, s, pkB>)
    , Eq(verify(s, <'responder', gy, B>, pkB), true)
    , Commit(A, B, <'I', 'R', gy^x>)
    , Authenticated(A, B, gy^x)
    ]->
    [ St_A_3(A, id, ltkA, B, pkB, x, gy)
    ]


// restrictions
restriction Equality:
	"All x y #i. Eq(x,y) @i ==> x = y"

restriction Key_Uniqueness:
  "All A x y #i #j. RLTK(A, x) @i & RLTK(A, y) @j ==> x = y"

restriction Participants_Uniqueness:
  "All X #i #j. Unique(X) @i & Unique(X) @j ==> #i = #j"

// Security Properties

// Verified
lemma executable:
  exists-trace
    "Ex A B t #i #j.
        Authenticated(A, B, t) @i & Authenticated(B, A, t) @j 
        & (All A #k #l. Unique(A) @k & Unique(A) @l ==> #k=#l)   
        & not (Ex B #m. Reveal(B) @m)
    "

// Attack on Authentication - Verified
lemma Authentication_Failure:
  exists-trace
    " Ex a b c t #i #j.
         Running(b, c, <'I', 'R', t>) @j
        & Commit(a, b, <'I', 'R', t>) @i 
        & #j < #i
       & not (Ex #k. Reveal(a) @k)
       & not (Ex #u. Reveal(b) @u)
       & not (Ex id1 #v. Create(c, id1) @v)
       & not (Ex id2 #w. Create(c, id2) @w)
    "

end