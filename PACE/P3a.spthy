theory P3a
begin

section{* 1.3 PACE - Introducing a Session Key *}

/*
  Protocol:
    1. A -> B: x
    2. B -> A: y
    3. A -> B: [x, y]_kab
    4. B -> A: [y, x]_kab

*/

functions:
  mac/2, vfy/3, true/0, kdf/3

equations:
  vfy(k, mac(k, msg), msg) = true

// Protocol Rules
rule Init:
    [ Fr(~id), Fr(~skAB), Fr(~skBA) ]
  --[ Create($A, ~id, 'Alice', ~skAB, ~skBA)
    , Create($B, ~id, 'Bob', ~skBA, ~skAB)
    ]->
    [ St_A_1($A, ~id, $B, ~skAB, ~skBA)
    , St_B_1($B, ~id, $A, ~skAB, ~skBA)
    ]

rule A_1_Send:
    [ St_A_1($A, ~id, $B, ~skAB, ~skBA)
    , Fr(~x)
    ]
  --[ Send($A, ~x)
    ]->
    [ St_A_2($A, ~id, $B, ~skAB, ~skBA, ~x)
    , Out(~x)
    ]

rule B_1_Receive:
    [ St_B_1($B, ~id, $A, ~skAB, ~skBA)
    , In(~x)
    ]
  --[ Recv($B, ~x)
    ]->
    [ St_B_2($B, ~id, $A, ~skAB, ~skBA, ~x)
    ]

rule B_2_Send:
    [ St_B_2($B, ~id, $A, ~skAB, ~skBA, ~x)
    , Fr(~y)
    ]
  --[ Send($B, ~y)
    ]->
    [ St_B_3($B, ~id, $A, ~skAB, ~skBA, ~x, ~y)
    , Out(~y)
    ]

rule A_2_Receive:
    [ St_A_2($A, ~id, $B, ~skAB, ~skBA, ~x)
    , In(~y)
    ]
  --[ Recv($A, ~y)
    ]->
    [ St_A_3($A, ~id, $B, ~skAB, ~skBA, ~x, ~y)
    ]

rule A_3_Send:
    let 
        kab = kdf(~skAB, ~x, ~y)
    in
    [ St_A_3($B, ~id, $A, ~skAB, ~skBA, ~x, ~y)
    ]
  --[ Send($A, mac(kab, ~y))
    ]->
    [ St_A_4($A, ~id, $B, ~skAB, ~skBA, ~x, ~y, kab, mac(kab, ~y))
    , Out(mac(kab, ~y))
    ]

rule B_3_Receive:
    let 
        kab = kdf(~skAB, ~x, ~y)
    in
    [ St_B_3($A, ~id, $B, ~skAB, ~skBA, ~x, ~y)
    , In(mac(kab, ~y))
    ]
  --[ Recv($B, mac(kab, ~y))
    , Eq(vfy(kab, mac(kab, ~y), ~y), true)
    , Authenticated($A, $B)
    ]->
    [ St_B_4($A, ~id, $B, ~skAB, ~skBA, ~x, ~y, kab, mac(kab, ~y))
    ]

rule B_4_Send:
    [ St_B_4($A, ~id, $B, ~skAB, ~skBA, ~x, ~y, kab, mac(kab, ~y))
    ]
  --[ Send($B, mac(kab, ~x))
    ]->
    [ St_B_5($A, ~id, $B, ~skAB, ~skBA, ~x, ~y, kab, mac(kab, ~y), mac(kab, ~x))
    , Out(mac(kab, ~x))
    ]

rule A_4_Receive:
    [ St_A_4($A, ~id, $B, ~skAB, ~skBA, ~x, ~y, kab, mac(kab, ~y))
    , In(mac(kab, ~x))
    ]
  --[ Recv($A, mac(kab, ~x))
      , Eq(vfy(kab, mac(kab, ~x), ~x), true)
      , Authenticated($B, $A)
    ]->
    [ St_A_5($A, ~id, $B, ~skAB, ~skBA, ~x, ~y, kab, mac(kab, ~y), mac(kab, ~x))
    ]

// restrictions
restriction Equality:
	"All x y #i. Eq(x,y) @i ==> x = y"

// Security Properties
lemma Executability:
  exists-trace
    "Ex A B #i #j. 
       Authenticated(A, B)@i & Authenticated(B, A)@j & not (A = B) & not (#i = #j)"

// TODO - add more properties

end

