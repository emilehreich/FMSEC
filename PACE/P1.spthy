theory P1
begin

section{* 1.1 PACE - Challenge Response Protocol *}

/*
  Protocol:
    1. A -> B: x
    2. B -> A: [x]_k(B,A)
*/

functions:
  mac/2, vfy/3, true/0

equations:
  vfy(k, mac(k, msg), msg) = true


// Key Infrastructure
rule Shared_Key:
  [ Fr(~sk)
  ]
--[ UniDKey($A, $B, ~sk)
  ]->
  [ !SKey($A, $B, ~sk)
  ]

rule Reveal_SKey_A:
    [ !SKey(A, B, k) 
    ]
  --[ Reveal(A) 
    ]->
    [ Out(k) 
    ]

rule Reveal_SKey_B:
    [ !SKey(A, B, k) 
    ]
  --[ Reveal(B) 
    ]->
    [ Out(k) 
    ]


// -- Protocol Rules -- 
// Thread Initialization

rule Init_A:
    [ Fr(~id)
    , !SKey($A, $B, k)]
  --[ Create($A, ~id, 'Alice', k)
    ]->
    [ St_A_1($A, ~id, $B, k)
    ]

rule Init_B:
    [ Fr(~id)
    , !SKey($A, $B, k)]
  --[ Create($B, ~id, 'Bob', k)
    ]->
    [ St_B_1($B, ~id, $A, k)
    ]

// Protocol Messages

rule A_1_Send:
    [ St_A_1($A, ~id, $B, k)
    , Fr(~x)
    ]
  --[ Send($A, ~x)
    ]->
    [ St_A_2($A, ~id, $B, k, ~x)
    , Out(~x)
    ]

rule B_1_Receive:
    [ St_B_1($B, ~id, $A, k)
    , In(~x)
    ]
  --[ Recv($B, ~x)
    ]->
    [ St_B_2($B, ~id, $A, k, ~x)
    ]

rule B_2_Send:
    [ St_B_2($B, ~id, $A, k, ~x)
    ]
  --[ Send($B, mac(k, ~x))
    ]->
    [ St_B_3($B, ~id, $A, k, ~x, mac(k, ~x))
    , Out(mac(k, ~x))
    ]

rule A_2_Receive:
    [ St_A_2($A, ~id, $B, k, ~x)
    , In(mac(k, ~x))
    ]
  --[ Recv($A, mac(k, ~x))
      , Eq(vfy(k, mac(k, ~x), ~x), true)
      , Authenticated($A, $B)
    ]->
    [ St_A_3($A, ~id, $B, k, ~x, mac(k, ~x))
    ]


// restrictions
restriction Equality:
	"All x y #i. Eq(x,y) @i ==> x = y"

restriction KeyUnidirection:
  "All A B k #i. 
    UniDKey(A, B, k)@i &
    UniDKey(B, A, k)@i 
    ==> (A = B)"

// Security Properties
lemma Executability:
  exists-trace
    "Ex A B #i. 
       Authenticated(A, B)@i & not (A = B)"

end

